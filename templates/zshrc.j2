PATH="$HOME/.local/bin:/opt/bin"
PATH="$PATH:$HOME/.krew/bin"
{% if 'Darwin' in ansible_facts['system'] %}
PATH="$PATH:/opt/homebrew/opt/coreutils/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/gnu-tar/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/grep/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/gnu-sed/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/gsed/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/gawk/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/findutils/libexec/gnubin"
PATH="$PATH:/opt/homebrew/opt/gnu-which/libexec/gnubin"
PATH="$PATH:{{ zsh_homebrew_prefix }}/bin:{{ zsh_homebrew_prefix }}/sbin"
{% else %}
PATH="$PATH:/snap/bin"
{% endif %}
PATH="$PATH:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin"

MANPATH="$HOME/.local/share/man"
{% if 'MacOSX' in ansible_facts['distribution'] %}
MANPATH="$MANPATH:/opt/homebrew/opt/coreutils/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/gnu-tar/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/grep/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/gnu-sed/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/gsed/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/gawk/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/findutils/libexec/gnuman"
MANPATH="$MANPATH:/opt/homebrew/opt/gnu-which/libexec/gnuman"
MANPATH="$MANPATH:{{ zsh_homebrew_prefix }}/share/man"
{% endif %}
MANPATH="$MANPATH:/usr/local/share/man:/usr/share/man"

export PATH
export MANPATH
export EDITOR=vim
export VISUAL=vim
export CHTSH_QUERY_OPTIONS="style=vs"
export DIRSTACKSIZE=10  # Max directories in auto_pushd stack
export FZF_DEFAULT_OPTS="--color info:33,prompt:33,pointer:166,marker:166,spinner:33,fg:240,fg+:241,bg+:255,hl:33,hl+:33:bold --reverse --height=50% --multi --info inline"
export KEYTIMEOUT=1
export LESS="-R --mouse"
export LESS_TERMCAP_mb=$'\E[01;32m'     # Add colors to manpages
export LESS_TERMCAP_md=$'\E[01;32m'     # "
export LESS_TERMCAP_me=$'\E[0m'         # "
export LESS_TERMCAP_se=$'\E[0m'         # "
export LESS_TERMCAP_so=$'\E[01;104;97m' # "
export LESS_TERMCAP_ue=$'\E[0m'         # "
export LESS_TERMCAP_us=$'\E[01;36m'     # "
export PRE_COMMIT_COLOR=never  # Colors are incompatible with solarized-light
export USE_GKE_GCLOUD_AUTH_PLUGIN=True
{% if (ansible_facts['distribution'] == "MacOSX") or (zsh_prefer_homebrew) %}
export CLICOLOR=1
export HELPDIR={{ zsh_homebrew_prefix }}/Cellar/zsh/{{ zsh_current_version }}/share/zsh/help
export HOMEBREW_CELLAR={{ zsh_homebrew_prefix }}/Cellar
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_EMOJI=1
export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_NO_INSTALL_CLEANUP=1
export HOMEBREW_NO_INSTALL_UPGRADE=1
export HOMEBREW_PREFIX={{ zsh_homebrew_prefix }}
export HOMEBREW_REPOSITORY={{ zsh_homebrew_prefix }}/Homebrew
export INFOPATH={{ zsh_homebrew_prefix }}/share/info:"${INFOPATH:-}"
export SHELL_SESSIONS_DISABLE=1  # See /etc/zshrc_Apple_Terminal
{% elif ansible_facts['distribution'] == "Fedora" %}
export HELPDIR=/usr/share/zsh/{{ zsh_current_version }}/help
{% endif %}


{% if ansible_facts['distribution'] != "Ubuntu" %}
unalias run-help
{% endif %}
alias help='run-help'  # help topics path set via $HELPDIR

alias lz='eza --color always --classify --long --all --group-directories-first --no-quotes'
alias ld='lz --only-dirs'
alias lg='lz --git'
alias lk='lz --sort type'
alias ll='lz --group'
alias lo='lz --octal-permissions'
alias lt='lz --tree'
alias lT='lz --sort time'
alias ls='ls --color --classify --human-readable'
alias lS='lz --sort size'

alias condense='grep -Erv "(^#|^$)"'
alias cp='cp -i'
alias dotfiles='ansible-playbook -J playbooks/site.yml --skip-tags become'
alias e='extract'
alias glances='glances --theme-white'
alias glow='glow --config ~/.config/glow.yml'
alias isodate='date --iso-8601=seconds'
alias mkpasswd='pwgen 16 1 -ABcny1'
alias mp='multipass'
alias mux='tmux new-session -A -s main -c ~/Development'
alias psync='rsync -a --info=progress2'
alias pubip='dig myip.opendns.com @resolver1.opendns.com'
alias scp='rsync -va'
alias timestamp='date +%F_%T | tr -d ":-" | tr "_" "-"'
alias vwd='venvs_path'
{% if ansible_facts['system'] == "Linux" %}
alias iowatch='watch -n 1 iostat -xy --human 1 1'
alias ipa='ip -c a'
alias lsblk='lsblk -o "NAME,FSTYPE,SIZE,UUID,MOUNTPOINT"'
alias lsports='lsof -i -P -n'
alias proc='ps -e --forest -o pid,ppid,user,time,cmd'
{% endif %}
{% if ansible_facts['distribution'] == "Ubuntu" %}
alias bat='batcat'
{% endif %}


cdf() { cd $(dirs -lp | fzf --no-multi); }
dw() { diceware -d- -n"${1:-5}"; }
jekyll() { docker run --rm --volume="${1:-$PWD}:/srv/jekyll" --publish "${2:-4000}:4000" jekyll/jekyll jekyll serve; }
numware() { n="${1:-5}"; echo "$(dw "$n")"-"$(for _ in $(seq "$n"); do echo -n $((RANDOM % 10)); done)"; }
show() { [[ "${${(@s/:/)$(whence -w "$1")}[2]}" =~ command ]] && bat "$(which "$1")" || whence -f "$1"; }
tardir() { tar -czf "${1%/}".tar.gz "$1"; }
tim() { tmux split-window -h -c "$(pwd)" "vim $1"; }
gtop() { cd $(git rev-parse --show-toplevel | xargs realpath --relative-to .); }

zvm_after_init() { bindkey -M viins '^R' atuin-search; }  # rebind after zsh-vi-mode loads


zstyle ':fzf-tab:*' default-color $'\033[38;5;240m'
zstyle ':fzf-tab:*' fzf-flags --color='hl:166:bold'
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza --color always --classify -1 $realpath'
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'         # Case insensitive tab completion
zstyle ':completion:*' completer _expand_alias _complete _ignored # Expand aliases with tab
zstyle ':completion:*' menu select                 # Use menu selection for completion
zstyle ':completion:*' list-suffixes               # Show ambiguous components for partial pathnames
zstyle ':completion:*' rehash true                 # Auto find new executables in path
zstyle ':completion:*' accept-exact '*(N)'         # Speed up completions
zstyle ':completion:*' use-cache on                # "
zstyle ':completion:*' cache-path ~/.zsh/cache     # "

WORDCHARS=${WORDCHARS//\/[&;]}                     # Don't consider these part of the word
CORRECT_IGNORE_FILE='[_|.]*'                       # Skip correcting commands matching pattern
HISTFILE=~/.zsh_history
HISTSIZE=2000
SAVEHIST=5000

setopt appendhistory           # Immediately append history instead of overwriting
setopt auto_pushd              # Push directories onto stack
setopt autocd                  # Change directory without `cd`
setopt correct                 # Auto correct mistakes
setopt extended_history        # Save each commands beginning timestamp and the duration
setopt extendedglob            # Extended globbing. Allows using regular expressions with *
setopt hist_verify             # Confirm commands from history expansion
setopt inc_append_history_time # Time taken by the command is recorded correctly in the history file
setopt nobeep                  # No beep
setopt nocaseglob              # Case insensitive globbing
setopt numericglobsort         # Sort filenames numerically when it makes sense
setopt pushd_ignore_dups       # Ignore duplices in the directory stack
setopt rcexpandparam           # Array expension with parameters

autoload -Uz compinit bashcompinit zmv zcalc vcs_info edit-command-line run-help
compinit -C && bashcompinit
zle -N edit-command-line


{% if ansible_facts['distribution'] == "MacOSX" %}
source {{ zsh_homebrew_prefix }}/opt/fzf/shell/completion.zsh
source {{ zsh_homebrew_prefix }}/opt/fzf/shell/key-bindings.zsh
source {{ zsh_homebrew_prefix }}/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
{% elif ansible_facts['distribution'] == "Fedora" %}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/fzf/shell/key-bindings.zsh
{% elif ansible_facts['distribution'] == "Ubuntu" %}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/doc/fzf/examples/completion.zsh
source /usr/share/doc/fzf/examples/key-bindings.zsh
{% endif %}
{% for plugin in zsh_plugins %}
source $HOME/.local/share/{{ plugin['name'] }}/{{ plugin['source'] }}
{% endfor %}
for rc in {{ zsh_rcd_dir }}/*; do source "$rc"; done


eval "$(dircolors $HOME/.dir_colors)"
eval "$(keychain --eval --ignore-missing --quiet
{%- if ansible_facts['distribution'] == "MacOSX" %} --inherit any
{%- endif %} id_rsa id_ed25519 id_home id_ansible google_compute_engine)"
eval "$(atuin init zsh)"
